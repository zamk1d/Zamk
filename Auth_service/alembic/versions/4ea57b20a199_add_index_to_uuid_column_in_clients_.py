"""add index to uuid column in clients & rename refresh_token field to jti

Revision ID: 4ea57b20a199
Revises: ee7b92996b20
Create Date: 2025-08-04 00:10:24.930032

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4ea57b20a199'
down_revision: Union[str, Sequence[str], None] = 'ee7b92996b20'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('clients', sa.Column('jti', sa.String(), nullable=True))
    op.drop_constraint(op.f('clients_uuid_key'), 'clients', type_='unique')
    op.create_index(op.f('ix_clients_uuid'), 'clients', ['uuid'], unique=True)
    op.create_unique_constraint(None, 'clients', ['jti'])
    op.drop_column('clients', 'refresh_token')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('clients', sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'clients', type_='unique')
    op.drop_index(op.f('ix_clients_uuid'), table_name='clients')
    op.create_unique_constraint(op.f('clients_uuid_key'), 'clients', ['uuid'], postgresql_nulls_not_distinct=False)
    op.drop_column('clients', 'jti')
    # ### end Alembic commands ###
