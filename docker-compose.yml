services:
  auth_service:
    build:
      context: ./Auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    ports:
      - "8000:8000"
    env_file:
      - ./Auth_service/.env  # ðŸ‘ˆ ÑƒÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ .env
    depends_on:
      auth_service_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - zamk_net

  auth_service_db:
    image: postgres:15
    container_name: auth_service_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zamk_net

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - zamk_net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - zamk_net

volumes:
  postgres_data:

networks:
  zamk_net:
    driver: bridge
